1	Write a function that can find the maximum number from an int Array

2	Write a function that can find the minimum number from an int Array

3	write a program that can find the first duplicated element from the array

4	Write a return method that can concat two arrays

5	write a program that can move all the zeros to the end of an array

6	Given an array of 3 characters print all permutation combinations from the given characters

7	Write a function that can remove the duplicates from an array of integers

8	write a function that can reverse an array

9	Write a method that can sort an int array in Ascending order without using the sort method

10	Write a return method that can sort an int array in descending order without using the sort method

11	If there are two elements equally close to zero like -2 and 2, consider the positive element to be "closer" to zero than the negative one.

12	Given an array of integers, write a function to return the item in the array,
    where the sum of all items on its left is equal to the sum of the ones on the right.
    For example :
    Given [4, 9, 1, 3, 6, 4]
    your function should give item 1, because 4+9 = 3+6+4

13	Write a function:
    that, given an integer N (1 < N < 100), returns an array containing N unique integers that sum up to 0.
    The function can return any such array.
    For example, given N = 4, the function could return [1,0, -3,2] or [-2,1, -4,5].
    The answer [1, -1,1,3] would be incorrect (because value 1 occurs twice).
    For N = 3 one of the possible answers is [-1,0,1] (but there are many more correct answers).
14	write a program that can move all the zeros to the end of the List of integers

15	Given a list of people' names: "Ahmed", "John", Eric", "Ahmed".....
    Write a java operation to remove all the names named Ahmed

16	Given a list of Integers 1, 2, 3, 4, 5, 6 ....etc. remove all values greater than 100.

17	remove palindrome strings from a List of String

18	Write a method that prints the frequency of each character from a String

19	Write a method that can sort the map by values

20	Write a method that can check if a number is Armstrong number

21	return the number of '1's in the binary representation of n for any integer n, where n > 0
    Example:
    for n=6 the binary representation is '110' and the number of '1's in that representation is 2

22	Write a function:
    that, given a positive integer N, prints the consecutive numbers from 1 to N, each on a separate line.
    However, any number divisible by 2, 3 or 5 should be replaced by the word Codility, Test or Coders respectively.
    If a number is divisible by more than one of the numbers: 2,3 or 5, it should be replaced by a concatenation of the respective words Codility, Test and Coders in this given order.
    For example, numbers divisible by both 2 and 3 should be replacée by CodilityTest and numbers divisible by all
    three numbers: 2,3 and 5, should be replaced by CodilityTestCoders.
    For example, here is the output for N = 24:
        1
        Codility
        Test
        Codility
        Coders
        CodilityTest
        7
        Codility
        Test
        Codi1ityCoders
        11
        CodilityTest
        13
        Codility
        TestCoders
        Codility
        17
        ....

23	Write a method that can divide two numbers without using division operator

24	Write a program that can print the numbers between 1 ~ N that can be divisible by 3, 5, and 15.
    if the number can be divisible by 3, 5 and 15,
    then it should only be displayed in DivisibelBy15' section
    if the number can be divisible by 3 but cannot be divisible by 15,
    then it should only be displayed in DivisibelBy3' section
    if the number can be divisible by 5 but cannot be divisible by 15,
    then it should only be displayed in DivisibelBy5' section
    EX:
    input: 100
    Output:
    Divisible By 15 15 30 45 60 75 90
    Divisible By 5 5 10 20 25 35 40 50 55 65 70 80 85 95 100
    Divisible By 3 3 6 9 12 18 21 24 27 33 36 39 42 48 51 54 57 63 66 69 72 78 81 84 87 93 96 99

25	Write a program that can print the numbers between 1 ~ N that can be divisible by 3, 5, and 15.
    if the number can be divisible by 3, 5 and 15,
    then it should only be displayed in DivisibelBy15' section
    if the number can be divisible by 3 but cannot be divisible by 15,
    then it should only be displayed in DivisibelBy3' section
    if the number can be divisible by 5 but cannot be divisible by 15,
    then it should only be displayed in DivisibelBy5' section
    EX:
    input: 100
    Output:
    Divisible By 15 15 30 45 60 75 90
    Divisible By 5 5 10 20 25 35 40 50 55 65 70 80 85 95 100
    Divisible By 3 3 6 9 12 18 21 24 27 33 36 39 42 48 51 54 57 63 66 69 72 78 81 84 87 93 96 99

26	Write a function which prints out the numbers from 1 to 30 but
    for numbers which are a multiple of 3, print "FIN" instead of the number
    and for numbers which are a multiple of 5, print "RA" instead of the number.
    for numbers which are a multiple of both 3 and 5, print "FINRA" instead of the number.

27	Write a return method that returns the factorial number of any given number

28	Number Fibonacci

29	Write a function which prints out the numbers from 1 to 30 but
    for numbers which are a multiple of 3, print "FIN" instead of the number
    and for numbers which are a multiple of 5, print "RA" instead of the number.
    for numbers which are a multiple of both 3 and 5, print "FINRA" instead of the number.

30	Write a function which prints out the numbers from 1 to 30 but
    for numbers which are a multiple of 3, print "FIN" instead of the number
    and for numbers which are a multiple of 5, print "RA" instead of the number.
    for numbers which are a multiple of both 3 and 5, print "FINRA" instead of the number.
    31	Please implement this method to traverse the tree and return the sum of the values (Node.getValue()) of all nodes at the level N in the tree.
    Node root is assumed to be at the level 1. All its children are level 2, etc.

32	Write a method that can check if a number is prime or not

33	Reverse Integer

34	write a function that can return the sum of digits of an integer Do not use any string manipulations
    Ex:
    input: 123
    output: 6

35	Swap two variable' values without using a third variable

36	return the number of different combinations of US coins
    (penny: 1c, nickel: 5c, dime: 10c, quarter: 25c, half-dollar: 50c)
    which may be used to produce a given amount of money.
    For example, 11 cents can be produced with:
    one 10-cent coin and one 1-cent coin,
    two 5-cent coins and one 1-cent coin,
    one 5-cent coin and six 1-cent coins,
    or eleven 1 cent coins.
    So there are four unique ways to produce 11 cents, therefore output should be 4
    Assume that the cents parameter is always positive.

37

38	Write a function that check if a string is build out of the same letters as another string.
    Ex: same("abc", "cab"); -> true , Solution 1:
    same("abc", "abb"); -> false:

39	write a program that can convert a string to integer. DO NOT use parse or valueOf methods

40	write a program that can return the first non-repeated character from a string

41	Write function that can find the frequency of characters
    Ex: FrequencyOfChars("AAABBCDD") ==> A3B2C1D2

42	Return the frequency of each character in the given string in Sorted manner
    Ex:
    Input: DDDAACCCCCCB
    Output: A2B1C6D3

43	Given a string, find the first non-repeating character in it and return its index.
    If it doesn't exist, return -1.

44	Write a program that can return the longest palindrome from a string

45	Write a function that can verify if a password is valid or not. requirements:
        1. Password MUST be at least have 6 characters and should not contain space
        2. PassWord should at least contain one upper case letter
        3. PassWord should at least contain one lowercase letter
        4. Password should at least contain one special characters
        5. Password should at least contain a digit
        if all requirements above are met, the method returns true, otherwise returns false

46	We are given a string S representing a phone number, which we would like to reformat.
    String S consists of N characters: digits, spaces and/or dashes.
    It contains at least two digits. Spaces and dashes in string S can be ignored.
    We want to reformat the given phone number in such a way that the digits are grouped in blocks of length
    three, separated by single dashes. If necessary, the final block or the last two
    blocks can be of length two.
    For example, given string S = "00-44 48 5555 8361", we would like to
    format it as "004-448-555-583-61".
    Write a function:
    class Solution { public String solution (String s); }
    that, given a string S representing a phone number, returns this phone number
    reformatted as described above.
    For example, given S = "00-44 48 5555 8361", the function should return "004-448-555-583-61".
    Given S = "O 22 1985--324", the function should return "022-198-53-24".
    Given S = "555372654", the function should return "555-372-654".
    Assume that:
        • N is an integer within the range [2..100];
        • string S consists only of digits (0-9), spaces and/or dashes (-);
        • string S contains at least two digits.
    In your solution, focus on correctness. The performance of your solution will
    not be the focus of the assessment.

47	Write function that can remove the duplicated values from String
    Ex: removeDup("AAABBBCCC") ==> ABC

48	Remove All Extra Space from String
    Input: " Hello world I love Java "
    Output: Hello world I love Java

49	Write a function that can reverse String
    Ex: Reverse("ABCD"); ==> DCBA

50	Reverse the second word ONLY
    Ex:
    Input: I Love Java
    OutPut: I evoL Java

51	Given alphanumeric String, we need to split the string into substrings of consecutive letters or numbers,
    sort the individual string and append them back together
    Ex:
    Input: "DC501GCCCA098911"
    Output: "CD015ACCCG011899"

52	return the sum of all integers found in the parameter String

53	Write a return method that can find the unique characters from the String
    Ex: unique("AAABBBCCCDEF") ==> "DEF";

